/* 
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.5.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Regula.DocumentReader.WebClient.Client.OpenAPIDateConverter;

namespace Regula.DocumentReader.WebClient.Model
{
    public class GraphicFieldType
    {

        /** Document holder photo */
        public const int PORTRAIT = 201;

        /** Fingerprint of document holder */
        public const int FINGERPRINT = 202;

        /** Image of the iris of document holder */
        public const int EYE = 203;

        /** Signature of document holder */
        public const int SIGNATURE = 204;

        /** Barcode image */
        public const int BAR_CODE = 205;

        /** Image of document confirming owner citizenship */
        public const int PROOF_OF_CITIZENSHIP = 206;

        /** Cropped and rotated with perspective compensation (front side) of a document. Single input image can contain multiple document side/pages, which will be returned as separated results. Most coordinates in other types defined on that image. */
        public const int DOCUMENT_FRONT = 207;

        /** Image of the rear side of the document */
        public const int DOCUMENT_REAR = 208;

        /** Area with dynamic color change */
        public const int COLOR_DYNAMIC = 209;

        /** Additional Portrait */
        public const int GHOST_PORTRAIT = 210;

        /** Stamp */
        public const int STAMP = 211;

        /** Undefined image type */
        public const int OTHER = 250;

        /** Fingerprint (thumb, left hand) */
        public const int FINGER_LEFT_THUMB = 300;

        /** Fingerprint (index, left hand) */
        public const int FINGER_LEFT_INDEX = 301;

        /** Fingerprint (middle, left hand) */
        public const int FINGER_LEFT_MIDDLE = 302;

        /** Fingerprint (ring, left hand) */
        public const int FINGER_LEFT_RING = 303;

        /** Fingerprint (little, left hand) */
        public const int FINGER_LEFT_LITTLE = 304;

        /** Fingerprint (thumb, right hand) */
        public const int FINGER_RIGHT_THUMB = 305;

        /** Fingerprint (index, right hand) */
        public const int FINGER_RIGHT_INDEX = 306;

        /** Fingerprint (middle, right hand) */
        public const int FINGER_RIGHT_MIDDLE = 307;

        /** Fingerprint (ring, right hand) */
        public const int FINGER_RIGHT_RING = 308;

        /** Fingerprint (little, right hand) */
        public const int FINGER_RIGHT_LITTLE = 309;

        /** Fingerprint (four without thumb on right hand) */
        public const int FINGER_RIGHT_FOUR_FINGERS = 313;

        /** Fingerprint (four without thumb on left hand */
        public const int FINGER_LEFT_FOUR_FINGERS = 314;

        /** Fingerprint (two thumbs) */
        public const int FINGER_TWO_THUMBS = 315;

    }
}
