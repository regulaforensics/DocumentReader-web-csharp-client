/*
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 8.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Regula.DocumentReader.WebClient.Client.FileParameter;
using OpenAPIDateConverter = Regula.DocumentReader.WebClient.Client.OpenAPIDateConverter;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// Defines MRZFormat
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MRZFormat
    {
        /// <summary>
        /// Enum IDL for value: 1x30
        /// </summary>
        [EnumMember(Value = "1x30")]
        IDL = 1,

        /// <summary>
        /// Enum ID1 for value: 3x30
        /// </summary>
        [EnumMember(Value = "3x30")]
        ID1 = 2,

        /// <summary>
        /// Enum ID2 for value: 2x36
        /// </summary>
        [EnumMember(Value = "2x36")]
        ID2 = 3,

        /// <summary>
        /// Enum ID3 for value: 2x44
        /// </summary>
        [EnumMember(Value = "2x44")]
        ID3 = 4,

        /// <summary>
        /// Enum CAN for value: 1x6
        /// </summary>
        [EnumMember(Value = "1x6")]
        CAN = 5,

        /// <summary>
        /// Enum ID1_2_30 for value: 2x30
        /// </summary>
        [EnumMember(Value = "2x30")]
        ID1_2_30 = 6
    }

}
