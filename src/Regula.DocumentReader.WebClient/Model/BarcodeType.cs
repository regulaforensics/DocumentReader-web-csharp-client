/*
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Regula.DocumentReader.WebClient.Client.FileParameter;
using OpenAPIDateConverter = Regula.DocumentReader.WebClient.Client.OpenAPIDateConverter;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// Enumeration contains the types of barcodes that can be processed
    /// </summary>
    /// <value>Enumeration contains the types of barcodes that can be processed</value>
    public enum BarcodeType
    {
        /// <summary>
        /// Enum UNKNOWN for value: 0
        /// </summary>
        UNKNOWN = 0,

        /// <summary>
        /// Enum CODE128 for value: 1
        /// </summary>
        CODE128 = 1,

        /// <summary>
        /// Enum CODE39 for value: 2
        /// </summary>
        CODE39 = 2,

        /// <summary>
        /// Enum EAN8 for value: 3
        /// </summary>
        EAN8 = 3,

        /// <summary>
        /// Enum ITF for value: 4
        /// </summary>
        ITF = 4,

        /// <summary>
        /// Enum PDF417 for value: 5
        /// </summary>
        PDF417 = 5,

        /// <summary>
        /// Enum STF for value: 6
        /// </summary>
        STF = 6,

        /// <summary>
        /// Enum MTF for value: 7
        /// </summary>
        MTF = 7,

        /// <summary>
        /// Enum IATA for value: 8
        /// </summary>
        IATA = 8,

        /// <summary>
        /// Enum CODABAR for value: 9
        /// </summary>
        CODABAR = 9,

        /// <summary>
        /// Enum UPCA for value: 10
        /// </summary>
        UPCA = 10,

        /// <summary>
        /// Enum CODE93 for value: 11
        /// </summary>
        CODE93 = 11,

        /// <summary>
        /// Enum UPCE for value: 12
        /// </summary>
        UPCE = 12,

        /// <summary>
        /// Enum EAN13 for value: 13
        /// </summary>
        EAN13 = 13,

        /// <summary>
        /// Enum QRCODE for value: 14
        /// </summary>
        QRCODE = 14,

        /// <summary>
        /// Enum AZTEC for value: 15
        /// </summary>
        AZTEC = 15,

        /// <summary>
        /// Enum DATAMATRIX for value: 16
        /// </summary>
        DATAMATRIX = 16,

        /// <summary>
        /// Enum ALL_1D for value: 17
        /// </summary>
        ALL_1D = 17,

        /// <summary>
        /// Enum CODE11 for value: 18
        /// </summary>
        CODE11 = 18,

        /// <summary>
        /// Enum JABCODE for value: 19
        /// </summary>
        JABCODE = 19,

        /// <summary>
        /// Enum END for value: 20
        /// </summary>
        END = 20
    }

}
