/* 
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.2.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Regula.DocumentReader.WebClient.Client.OpenAPIDateConverter;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// Input image quality checks for the document processing
    /// </summary>
    /// <value>Input image quality checks for the document processing</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum InputImageQualityChecks
    {
        /// <summary>
        /// Enum Glares for value: glaresCheck
        /// </summary>
        [EnumMember(Value = "glaresCheck")]
        Glares = 1,

        /// <summary>
        /// Enum Focus for value: focusCheck
        /// </summary>
        [EnumMember(Value = "focusCheck")]
        Focus = 2,

        /// <summary>
        /// Enum Resolution for value: dpiThreshold
        /// </summary>
        [EnumMember(Value = "dpiThreshold")]
        Resolution = 3,

        /// <summary>
        /// Enum Colorness for value: colornessCheck
        /// </summary>
        [EnumMember(Value = "colornessCheck")]
        Colorness = 4,

        /// <summary>
        /// Enum Perspective for value: perspectiveCheck
        /// </summary>
        [EnumMember(Value = "perspectiveCheck")]
        Perspective = 5,

        /// <summary>
        /// Enum Bounds for value: documentPosition
        /// </summary>
        [EnumMember(Value = "documentPosition")]
        Bounds = 6,

        /// <summary>
        /// Enum Portrait for value: portraitCheck
        /// </summary>
        [EnumMember(Value = "portraitCheck")]
        Portrait = 7,

        /// <summary>
        /// Enum Brightness for value: brightnessCheck
        /// </summary>
        [EnumMember(Value = "brightnessCheck")]
        Brightness = 8,

        /// <summary>
        /// Enum Occlusion for value: occlusionCheck
        /// </summary>
        [EnumMember(Value = "occlusionCheck")]
        Occlusion = 9

    }

}
