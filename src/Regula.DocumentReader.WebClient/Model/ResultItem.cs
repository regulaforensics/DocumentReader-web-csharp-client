/*
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using FileParameter = Regula.DocumentReader.WebClient.Client.FileParameter;
using OpenAPIDateConverter = Regula.DocumentReader.WebClient.Client.OpenAPIDateConverter;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// Common fields for all result objects
    /// </summary>
    [DataContract(Name = "ResultItem")]
    [JsonConverter(typeof(JsonSubtypes), "result_type")]
    [JsonSubtypes.KnownSubType(typeof(DocumentImageResult), "1")]
    [JsonSubtypes.KnownSubType(typeof(DocumentBinaryInfoResult), "101")]
    [JsonSubtypes.KnownSubType(typeof(RFIDTextDataResult), "102")]
    [JsonSubtypes.KnownSubType(typeof(GraphicsResult), "103")]
    [JsonSubtypes.KnownSubType(typeof(DocumentBinaryInfoResult), "104")]
    [JsonSubtypes.KnownSubType(typeof(RFIDGraphicsInfoResult), "105")]
    [JsonSubtypes.KnownSubType(typeof(ByteArrayResult), "109")]
    [JsonSubtypes.KnownSubType(typeof(LexicalAnalysisResult), "15")]
    [JsonSubtypes.KnownSubType(typeof(DocumentImageResult), "16")]
    [JsonSubtypes.KnownSubType(typeof(TextDataResult), "17")]
    [JsonSubtypes.KnownSubType(typeof(TextDataResult), "18")]
    [JsonSubtypes.KnownSubType(typeof(GraphicsResult), "19")]
    [JsonSubtypes.KnownSubType(typeof(AuthenticityResult), "20")]
    [JsonSubtypes.KnownSubType(typeof(TextDataResult), "26")]
    [JsonSubtypes.KnownSubType(typeof(TextDataResult), "3")]
    [JsonSubtypes.KnownSubType(typeof(ImageQualityResult), "30")]
    [JsonSubtypes.KnownSubType(typeof(GraphicsResult), "32")]
    [JsonSubtypes.KnownSubType(typeof(StatusResult), "33")]
    [JsonSubtypes.KnownSubType(typeof(AuthenticityResult), "34")]
    [JsonSubtypes.KnownSubType(typeof(GraphicsResult), "35")]
    [JsonSubtypes.KnownSubType(typeof(TextResult), "36")]
    [JsonSubtypes.KnownSubType(typeof(ImagesResult), "37")]
    [JsonSubtypes.KnownSubType(typeof(GraphicsResult), "38")]
    [JsonSubtypes.KnownSubType(typeof(AuthenticityResult), "39")]
    [JsonSubtypes.KnownSubType(typeof(EncryptedRCLResult), "49")]
    [JsonSubtypes.KnownSubType(typeof(DocBarCodeInfo), "5")]
    [JsonSubtypes.KnownSubType(typeof(LicenseResult), "50")]
    [JsonSubtypes.KnownSubType(typeof(GraphicsResult), "6")]
    [JsonSubtypes.KnownSubType(typeof(MRZPositionResult), "61")]
    [JsonSubtypes.KnownSubType(typeof(DocumentPositionResult), "62")]
    [JsonSubtypes.KnownSubType(typeof(MRZTestQualityResult), "7")]
    [JsonSubtypes.KnownSubType(typeof(DocumentTypesCandidatesResult), "8")]
    [JsonSubtypes.KnownSubType(typeof(DocumentPositionResult), "85")]
    [JsonSubtypes.KnownSubType(typeof(MRZDetectorResult), "87")]
    [JsonSubtypes.KnownSubType(typeof(ChosenDocumentTypeResult), "9")]
    [JsonSubtypes.KnownSubType(typeof(FaceDetectionResult), "97")]
    public partial class ResultItem : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets ResultType
        /// </summary>
        [DataMember(Name = "result_type", IsRequired = true, EmitDefaultValue = true)]
        public Result ResultType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ResultItem" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ResultItem() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ResultItem" /> class.
        /// </summary>
        /// <param name="bufLength">bufLength.</param>
        /// <param name="light">light.</param>
        /// <param name="listIdx">listIdx.</param>
        /// <param name="pageIdx">pageIdx.</param>
        /// <param name="resultType">resultType (required).</param>
        public ResultItem(int bufLength = default(int), int light = default(int), int listIdx = default(int), int pageIdx = default(int), Result resultType = default(Result))
        {
            this.ResultType = resultType;
            this.BufLength = bufLength;
            this.Light = light;
            this.ListIdx = listIdx;
            this.PageIdx = pageIdx;
        }

        /// <summary>
        /// Gets or Sets BufLength
        /// </summary>
        [DataMember(Name = "buf_length", EmitDefaultValue = false)]
        public int? BufLength { get; set; }

        /// <summary>
        /// Gets or Sets Light
        /// </summary>
        [DataMember(Name = "light", EmitDefaultValue = false)]
        public int? Light { get; set; }

        /// <summary>
        /// Gets or Sets ListIdx
        /// </summary>
        [DataMember(Name = "list_idx", EmitDefaultValue = false)]
        public int? ListIdx { get; set; }

        /// <summary>
        /// Gets or Sets PageIdx
        /// </summary>
        [DataMember(Name = "page_idx", EmitDefaultValue = false)]
        public int? PageIdx { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ResultItem {\n");
            sb.Append("  BufLength: ").Append(BufLength).Append("\n");
            sb.Append("  Light: ").Append(Light).Append("\n");
            sb.Append("  ListIdx: ").Append(ListIdx).Append("\n");
            sb.Append("  PageIdx: ").Append(PageIdx).Append("\n");
            sb.Append("  ResultType: ").Append(ResultType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
