// <auto-generated>
/*
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Regula.DocumentReader.WebClient.Client;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// Locale id. Used to tag same typed fields declared in several languages. For example: name can be provided in both native and latin variants. Based on Microsoft locale id (https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/70feba9f-294e-491e-b6eb-56532684c37f). 
    /// </summary>
    /// <value>Locale id. Used to tag same typed fields declared in several languages. For example: name can be provided in both native and latin variants. Based on Microsoft locale id (https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/70feba9f-294e-491e-b6eb-56532684c37f). </value>
    public enum LCID
    {
        /// <summary>
        /// Enum LATIN for value: 0
        /// </summary>
        LATIN = 0,

        /// <summary>
        /// Enum AFRIKAANS for value: 1078
        /// </summary>
        AFRIKAANS = 1078,

        /// <summary>
        /// Enum ALBANIAN for value: 1052
        /// </summary>
        ALBANIAN = 1052,

        /// <summary>
        /// Enum ARABIC_ALGERIA for value: 5121
        /// </summary>
        ARABIC_ALGERIA = 5121,

        /// <summary>
        /// Enum ARABIC_BAHRAIN for value: 15361
        /// </summary>
        ARABIC_BAHRAIN = 15361,

        /// <summary>
        /// Enum ARABIC_EGYPT for value: 3073
        /// </summary>
        ARABIC_EGYPT = 3073,

        /// <summary>
        /// Enum ARABIC_IRAQ for value: 2049
        /// </summary>
        ARABIC_IRAQ = 2049,

        /// <summary>
        /// Enum ARABIC_JORDAN for value: 11265
        /// </summary>
        ARABIC_JORDAN = 11265,

        /// <summary>
        /// Enum ARABIC_KUWAIT for value: 13313
        /// </summary>
        ARABIC_KUWAIT = 13313,

        /// <summary>
        /// Enum ARABIC_LEBANON for value: 12289
        /// </summary>
        ARABIC_LEBANON = 12289,

        /// <summary>
        /// Enum ARABIC_LIBYA for value: 4097
        /// </summary>
        ARABIC_LIBYA = 4097,

        /// <summary>
        /// Enum ARABIC_MOROCCO for value: 6145
        /// </summary>
        ARABIC_MOROCCO = 6145,

        /// <summary>
        /// Enum ARABIC_OMAN for value: 8193
        /// </summary>
        ARABIC_OMAN = 8193,

        /// <summary>
        /// Enum ARABIC_QATAR for value: 16385
        /// </summary>
        ARABIC_QATAR = 16385,

        /// <summary>
        /// Enum ARABIC_SAUDI_ARABIA for value: 1025
        /// </summary>
        ARABIC_SAUDI_ARABIA = 1025,

        /// <summary>
        /// Enum ARABIC_SYRIA for value: 10241
        /// </summary>
        ARABIC_SYRIA = 10241,

        /// <summary>
        /// Enum ARABIC_TUNISIA for value: 7169
        /// </summary>
        ARABIC_TUNISIA = 7169,

        /// <summary>
        /// Enum ARABIC_UAE for value: 14337
        /// </summary>
        ARABIC_UAE = 14337,

        /// <summary>
        /// Enum ARABIC_YEMEN for value: 9217
        /// </summary>
        ARABIC_YEMEN = 9217,

        /// <summary>
        /// Enum ARABIC_ARMENIAN for value: 1067
        /// </summary>
        ARABIC_ARMENIAN = 1067,

        /// <summary>
        /// Enum AZERI_CYRILIC for value: 2092
        /// </summary>
        AZERI_CYRILIC = 2092,

        /// <summary>
        /// Enum AZERI_LATIN for value: 1068
        /// </summary>
        AZERI_LATIN = 1068,

        /// <summary>
        /// Enum BASQUE for value: 1069
        /// </summary>
        BASQUE = 1069,

        /// <summary>
        /// Enum BELARUSIAN for value: 1059
        /// </summary>
        BELARUSIAN = 1059,

        /// <summary>
        /// Enum BULGARIAN for value: 1026
        /// </summary>
        BULGARIAN = 1026,

        /// <summary>
        /// Enum BURMESE for value: 1109
        /// </summary>
        BURMESE = 1109,

        /// <summary>
        /// Enum CATALAN for value: 1027
        /// </summary>
        CATALAN = 1027,

        /// <summary>
        /// Enum CHINESE_HONGKONG_SAR for value: 3076
        /// </summary>
        CHINESE_HONGKONG_SAR = 3076,

        /// <summary>
        /// Enum CHINESE_MACAO_SAR for value: 5124
        /// </summary>
        CHINESE_MACAO_SAR = 5124,

        /// <summary>
        /// Enum CHINESE for value: 2052
        /// </summary>
        CHINESE = 2052,

        /// <summary>
        /// Enum CHINESE_SINGAPORE for value: 4100
        /// </summary>
        CHINESE_SINGAPORE = 4100,

        /// <summary>
        /// Enum CHINESE_TAIWAN for value: 1028
        /// </summary>
        CHINESE_TAIWAN = 1028,

        /// <summary>
        /// Enum CROATIAN for value: 1050
        /// </summary>
        CROATIAN = 1050,

        /// <summary>
        /// Enum CZECH for value: 1029
        /// </summary>
        CZECH = 1029,

        /// <summary>
        /// Enum DANISH for value: 1030
        /// </summary>
        DANISH = 1030,

        /// <summary>
        /// Enum DIVEHI for value: 1125
        /// </summary>
        DIVEHI = 1125,

        /// <summary>
        /// Enum DUTCH_BELGIUM for value: 2067
        /// </summary>
        DUTCH_BELGIUM = 2067,

        /// <summary>
        /// Enum DUTCH_NETHERLANDS for value: 1043
        /// </summary>
        DUTCH_NETHERLANDS = 1043,

        /// <summary>
        /// Enum ENGLISH_AUSTRALIA for value: 3081
        /// </summary>
        ENGLISH_AUSTRALIA = 3081,

        /// <summary>
        /// Enum ENGLISH_BELIZE for value: 10249
        /// </summary>
        ENGLISH_BELIZE = 10249,

        /// <summary>
        /// Enum ENGLISH_CANADA for value: 4105
        /// </summary>
        ENGLISH_CANADA = 4105,

        /// <summary>
        /// Enum ENGLISH_CARRIBEAN for value: 9225
        /// </summary>
        ENGLISH_CARRIBEAN = 9225,

        /// <summary>
        /// Enum ENGLISH_IRELAND for value: 6153
        /// </summary>
        ENGLISH_IRELAND = 6153,

        /// <summary>
        /// Enum ENGLISH_JAMAICA for value: 8201
        /// </summary>
        ENGLISH_JAMAICA = 8201,

        /// <summary>
        /// Enum ENGLISH_NEW_ZEALAND for value: 5129
        /// </summary>
        ENGLISH_NEW_ZEALAND = 5129,

        /// <summary>
        /// Enum ENGLISH_PHILIPPINES for value: 13321
        /// </summary>
        ENGLISH_PHILIPPINES = 13321,

        /// <summary>
        /// Enum ENGLISH_SOUTH_AFRICA for value: 7177
        /// </summary>
        ENGLISH_SOUTH_AFRICA = 7177,

        /// <summary>
        /// Enum ENGLISH_TRINIDAD for value: 11273
        /// </summary>
        ENGLISH_TRINIDAD = 11273,

        /// <summary>
        /// Enum ENGLISH_UK for value: 2057
        /// </summary>
        ENGLISH_UK = 2057,

        /// <summary>
        /// Enum ENGLISH_US for value: 1033
        /// </summary>
        ENGLISH_US = 1033,

        /// <summary>
        /// Enum ENGLISH_ZIMBABWE for value: 12297
        /// </summary>
        ENGLISH_ZIMBABWE = 12297,

        /// <summary>
        /// Enum ESTONIAN for value: 1061
        /// </summary>
        ESTONIAN = 1061,

        /// <summary>
        /// Enum FAEROESE for value: 1080
        /// </summary>
        FAEROESE = 1080,

        /// <summary>
        /// Enum FARSI for value: 1065
        /// </summary>
        FARSI = 1065,

        /// <summary>
        /// Enum FINNISH for value: 1035
        /// </summary>
        FINNISH = 1035,

        /// <summary>
        /// Enum FRENCH_BELGIUM for value: 2060
        /// </summary>
        FRENCH_BELGIUM = 2060,

        /// <summary>
        /// Enum FRENCH_CANADA for value: 3084
        /// </summary>
        FRENCH_CANADA = 3084,

        /// <summary>
        /// Enum FRENCH_FRANCE for value: 1036
        /// </summary>
        FRENCH_FRANCE = 1036,

        /// <summary>
        /// Enum FRENCH_LUXEMBOURG for value: 5132
        /// </summary>
        FRENCH_LUXEMBOURG = 5132,

        /// <summary>
        /// Enum FRENCH_MONACO for value: 6156
        /// </summary>
        FRENCH_MONACO = 6156,

        /// <summary>
        /// Enum FRENCH_SWITZERLAND for value: 4108
        /// </summary>
        FRENCH_SWITZERLAND = 4108,

        /// <summary>
        /// Enum FYRO_MACEDONIAN for value: 1071
        /// </summary>
        FYRO_MACEDONIAN = 1071,

        /// <summary>
        /// Enum GALICIAN for value: 1110
        /// </summary>
        GALICIAN = 1110,

        /// <summary>
        /// Enum GEORGIAN for value: 1079
        /// </summary>
        GEORGIAN = 1079,

        /// <summary>
        /// Enum GERMAN_AUSTRIA for value: 3079
        /// </summary>
        GERMAN_AUSTRIA = 3079,

        /// <summary>
        /// Enum GERMAN_GERMANY for value: 1031
        /// </summary>
        GERMAN_GERMANY = 1031,

        /// <summary>
        /// Enum GERMAN_LIECHTENSTEIN for value: 5127
        /// </summary>
        GERMAN_LIECHTENSTEIN = 5127,

        /// <summary>
        /// Enum GERMAN_LUXEMBOURG for value: 4103
        /// </summary>
        GERMAN_LUXEMBOURG = 4103,

        /// <summary>
        /// Enum GERMAN_SWITZERLAND for value: 2055
        /// </summary>
        GERMAN_SWITZERLAND = 2055,

        /// <summary>
        /// Enum GREEK for value: 1032
        /// </summary>
        GREEK = 1032,

        /// <summary>
        /// Enum GUJARATI for value: 1095
        /// </summary>
        GUJARATI = 1095,

        /// <summary>
        /// Enum HEBREW for value: 1037
        /// </summary>
        HEBREW = 1037,

        /// <summary>
        /// Enum HINDI_INDIA for value: 1081
        /// </summary>
        HINDI_INDIA = 1081,

        /// <summary>
        /// Enum HUNGARIAN for value: 1038
        /// </summary>
        HUNGARIAN = 1038,

        /// <summary>
        /// Enum ICELANDIC for value: 1039
        /// </summary>
        ICELANDIC = 1039,

        /// <summary>
        /// Enum INDONESIAN for value: 1057
        /// </summary>
        INDONESIAN = 1057,

        /// <summary>
        /// Enum ITALIAN_ITALY for value: 1040
        /// </summary>
        ITALIAN_ITALY = 1040,

        /// <summary>
        /// Enum ITALIAN_SWITZERLAND for value: 2064
        /// </summary>
        ITALIAN_SWITZERLAND = 2064,

        /// <summary>
        /// Enum JAPANESE for value: 1041
        /// </summary>
        JAPANESE = 1041,

        /// <summary>
        /// Enum KANNADA for value: 1099
        /// </summary>
        KANNADA = 1099,

        /// <summary>
        /// Enum KAZAKH for value: 1087
        /// </summary>
        KAZAKH = 1087,

        /// <summary>
        /// Enum KHMER for value: 1107
        /// </summary>
        KHMER = 1107,

        /// <summary>
        /// Enum KONKANI for value: 1111
        /// </summary>
        KONKANI = 1111,

        /// <summary>
        /// Enum KOREAN for value: 1042
        /// </summary>
        KOREAN = 1042,

        /// <summary>
        /// Enum KYRGYZ_CYRILICK for value: 1088
        /// </summary>
        KYRGYZ_CYRILICK = 1088,

        /// <summary>
        /// Enum LATVIAN for value: 1062
        /// </summary>
        LATVIAN = 1062,

        /// <summary>
        /// Enum LITHUANIAN for value: 1063
        /// </summary>
        LITHUANIAN = 1063,

        /// <summary>
        /// Enum MALAY_MALAYSIA for value: 1086
        /// </summary>
        MALAY_MALAYSIA = 1086,

        /// <summary>
        /// Enum MALAY_BRUNEI_DARUSSALAM for value: 2110
        /// </summary>
        MALAY_BRUNEI_DARUSSALAM = 2110,

        /// <summary>
        /// Enum MALTESE for value: 1082
        /// </summary>
        MALTESE = 1082,

        /// <summary>
        /// Enum MARATHI for value: 1102
        /// </summary>
        MARATHI = 1102,

        /// <summary>
        /// Enum MONGOLIAN_CYRILIC for value: 1104
        /// </summary>
        MONGOLIAN_CYRILIC = 1104,

        /// <summary>
        /// Enum NORWEGIAN_BOKMAL for value: 1044
        /// </summary>
        NORWEGIAN_BOKMAL = 1044,

        /// <summary>
        /// Enum NORWEGIAN_NYORSK for value: 2068
        /// </summary>
        NORWEGIAN_NYORSK = 2068,

        /// <summary>
        /// Enum POLISH for value: 1045
        /// </summary>
        POLISH = 1045,

        /// <summary>
        /// Enum PORTUGUESE_BRAZIL for value: 1046
        /// </summary>
        PORTUGUESE_BRAZIL = 1046,

        /// <summary>
        /// Enum PORTUGUESE_PORTUGAL for value: 2070
        /// </summary>
        PORTUGUESE_PORTUGAL = 2070,

        /// <summary>
        /// Enum PUNJABI for value: 1094
        /// </summary>
        PUNJABI = 1094,

        /// <summary>
        /// Enum RHAETO_ROMANIC for value: 1047
        /// </summary>
        RHAETO_ROMANIC = 1047,

        /// <summary>
        /// Enum ROMANIAN for value: 1048
        /// </summary>
        ROMANIAN = 1048,

        /// <summary>
        /// Enum RUSSIAN for value: 1049
        /// </summary>
        RUSSIAN = 1049,

        /// <summary>
        /// Enum SANSKRIT for value: 1103
        /// </summary>
        SANSKRIT = 1103,

        /// <summary>
        /// Enum SERBIAN_CYRILIC for value: 3098
        /// </summary>
        SERBIAN_CYRILIC = 3098,

        /// <summary>
        /// Enum SERBIAN_LATIN for value: 2074
        /// </summary>
        SERBIAN_LATIN = 2074,

        /// <summary>
        /// Enum SINHALA for value: 1115
        /// </summary>
        SINHALA = 1115,

        /// <summary>
        /// Enum SLOVAK for value: 1051
        /// </summary>
        SLOVAK = 1051,

        /// <summary>
        /// Enum SLOVENIAN for value: 1060
        /// </summary>
        SLOVENIAN = 1060,

        /// <summary>
        /// Enum SPANISH_ARGENTINA for value: 11274
        /// </summary>
        SPANISH_ARGENTINA = 11274,

        /// <summary>
        /// Enum SPANISH_BOLIVIA for value: 16394
        /// </summary>
        SPANISH_BOLIVIA = 16394,

        /// <summary>
        /// Enum SPANISH_CHILE for value: 13322
        /// </summary>
        SPANISH_CHILE = 13322,

        /// <summary>
        /// Enum SPANICH_COLOMBIA for value: 9226
        /// </summary>
        SPANICH_COLOMBIA = 9226,

        /// <summary>
        /// Enum SPANISH_COSTA_RICA for value: 5130
        /// </summary>
        SPANISH_COSTA_RICA = 5130,

        /// <summary>
        /// Enum SPANISH_DOMINICAN_REPUBLIC for value: 7178
        /// </summary>
        SPANISH_DOMINICAN_REPUBLIC = 7178,

        /// <summary>
        /// Enum SPANISH_ECUADOR for value: 12298
        /// </summary>
        SPANISH_ECUADOR = 12298,

        /// <summary>
        /// Enum SPANISH_EL_SALVADOR for value: 17418
        /// </summary>
        SPANISH_EL_SALVADOR = 17418,

        /// <summary>
        /// Enum SPANISH_GUATEMALA for value: 4106
        /// </summary>
        SPANISH_GUATEMALA = 4106,

        /// <summary>
        /// Enum SPANISH_HONDURAS for value: 18442
        /// </summary>
        SPANISH_HONDURAS = 18442,

        /// <summary>
        /// Enum SPANISH_MEXICO for value: 2058
        /// </summary>
        SPANISH_MEXICO = 2058,

        /// <summary>
        /// Enum SPANISH_NICARAGUA for value: 19466
        /// </summary>
        SPANISH_NICARAGUA = 19466,

        /// <summary>
        /// Enum SPANISH_PANAMA for value: 6154
        /// </summary>
        SPANISH_PANAMA = 6154,

        /// <summary>
        /// Enum SPANISH_PARAGUAY for value: 15370
        /// </summary>
        SPANISH_PARAGUAY = 15370,

        /// <summary>
        /// Enum SPANISH_PERU for value: 10250
        /// </summary>
        SPANISH_PERU = 10250,

        /// <summary>
        /// Enum SPANISH_PUERTO_RICO for value: 20490
        /// </summary>
        SPANISH_PUERTO_RICO = 20490,

        /// <summary>
        /// Enum SPANISH_TRADITIONAL_SORT for value: 1034
        /// </summary>
        SPANISH_TRADITIONAL_SORT = 1034,

        /// <summary>
        /// Enum SPANISH_INTERNATIONAL_SORT for value: 3082
        /// </summary>
        SPANISH_INTERNATIONAL_SORT = 3082,

        /// <summary>
        /// Enum SPANISH_URUGUAY for value: 14346
        /// </summary>
        SPANISH_URUGUAY = 14346,

        /// <summary>
        /// Enum SPANISH_VENEZUELA for value: 8202
        /// </summary>
        SPANISH_VENEZUELA = 8202,

        /// <summary>
        /// Enum SWAHILI for value: 1089
        /// </summary>
        SWAHILI = 1089,

        /// <summary>
        /// Enum SWEDISH for value: 1053
        /// </summary>
        SWEDISH = 1053,

        /// <summary>
        /// Enum SWEDISH_FINLAND for value: 2077
        /// </summary>
        SWEDISH_FINLAND = 2077,

        /// <summary>
        /// Enum SYRIAC for value: 1114
        /// </summary>
        SYRIAC = 1114,

        /// <summary>
        /// Enum TAMIL for value: 1097
        /// </summary>
        TAMIL = 1097,

        /// <summary>
        /// Enum TATAR for value: 1092
        /// </summary>
        TATAR = 1092,

        /// <summary>
        /// Enum TELUGU for value: 1098
        /// </summary>
        TELUGU = 1098,

        /// <summary>
        /// Enum THAI_THAILAND for value: 1054
        /// </summary>
        THAI_THAILAND = 1054,

        /// <summary>
        /// Enum TURKISH for value: 1055
        /// </summary>
        TURKISH = 1055,

        /// <summary>
        /// Enum TAJIK_CYRILLIC for value: 1064
        /// </summary>
        TAJIK_CYRILLIC = 1064,

        /// <summary>
        /// Enum TURKMEN for value: 1090
        /// </summary>
        TURKMEN = 1090,

        /// <summary>
        /// Enum UKRAINIAN for value: 1058
        /// </summary>
        UKRAINIAN = 1058,

        /// <summary>
        /// Enum URDU for value: 1056
        /// </summary>
        URDU = 1056,

        /// <summary>
        /// Enum UZBEK_CYRILIC for value: 2115
        /// </summary>
        UZBEK_CYRILIC = 2115,

        /// <summary>
        /// Enum UZBEK_LATIN for value: 1091
        /// </summary>
        UZBEK_LATIN = 1091,

        /// <summary>
        /// Enum VIETNAMESE for value: 1066
        /// </summary>
        VIETNAMESE = 1066,

        /// <summary>
        /// Enum CTC_SIMPLIFIED for value: 50001
        /// </summary>
        CTC_SIMPLIFIED = 50001,

        /// <summary>
        /// Enum CTC_TRADITIONAL for value: 50002
        /// </summary>
        CTC_TRADITIONAL = 50002,

        /// <summary>
        /// Enum BENGALI_BANGLADESH for value: 2117
        /// </summary>
        BENGALI_BANGLADESH = 2117,

        /// <summary>
        /// Enum BENGALI_INDIA for value: 1093
        /// </summary>
        BENGALI_INDIA = 1093,

        /// <summary>
        /// Enum ASSAMESE for value: 1101
        /// </summary>
        ASSAMESE = 1101,

        /// <summary>
        /// Enum ORIYA for value: 1096
        /// </summary>
        ORIYA = 1096,

        /// <summary>
        /// Enum MALAYALAM for value: 1100
        /// </summary>
        MALAYALAM = 1100,

        /// <summary>
        /// Enum LAO for value: 1108
        /// </summary>
        LAO = 1108,

        /// <summary>
        /// Enum SINDHI_INDIA for value: 1113
        /// </summary>
        SINDHI_INDIA = 1113,

        /// <summary>
        /// Enum AMHARIC for value: 1118
        /// </summary>
        AMHARIC = 1118,

        /// <summary>
        /// Enum KASHMIRI for value: 1120
        /// </summary>
        KASHMIRI = 1120,

        /// <summary>
        /// Enum NEPALI for value: 1121
        /// </summary>
        NEPALI = 1121,

        /// <summary>
        /// Enum PASHTO for value: 1123
        /// </summary>
        PASHTO = 1123,

        /// <summary>
        /// Enum SINDHI for value: 2137
        /// </summary>
        SINDHI = 2137,

        /// <summary>
        /// Enum ARABIC for value: 4096
        /// </summary>
        ARABIC = 4096,

        /// <summary>
        /// Enum BANK_CARD_NUMBER for value: 10000
        /// </summary>
        BANK_CARD_NUMBER = 10000,

        /// <summary>
        /// Enum BANK_CARD_EXPIRY_DATE for value: 10001
        /// </summary>
        BANK_CARD_EXPIRY_DATE = 10001,

        /// <summary>
        /// Enum BANK_CARD_NAME for value: 10002
        /// </summary>
        BANK_CARD_NAME = 10002,

        /// <summary>
        /// Enum BANK_CARD for value: 10003
        /// </summary>
        BANK_CARD = 10003,

        /// <summary>
        /// Enum BANK_CARD_CVV2 for value: 10004
        /// </summary>
        BANK_CARD_CVV2 = 10004,

        /// <summary>
        /// Enum ABKHAZIAN for value: 10011
        /// </summary>
        ABKHAZIAN = 10011,

        /// <summary>
        /// Enum KARAKALPAK for value: 10012
        /// </summary>
        KARAKALPAK = 10012,

        /// <summary>
        /// Enum URDU_DETECTION for value: 10560
        /// </summary>
        URDU_DETECTION = 10560
    }

    /// <summary>
    /// Converts <see cref="LCID"/> to and from the JSON value
    /// </summary>
    public static class LCIDValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="LCID"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static LCID FromString(string value)
        {
            if (value.Equals((0).ToString()))
                return LCID.LATIN;

            if (value.Equals((1078).ToString()))
                return LCID.AFRIKAANS;

            if (value.Equals((1052).ToString()))
                return LCID.ALBANIAN;

            if (value.Equals((5121).ToString()))
                return LCID.ARABIC_ALGERIA;

            if (value.Equals((15361).ToString()))
                return LCID.ARABIC_BAHRAIN;

            if (value.Equals((3073).ToString()))
                return LCID.ARABIC_EGYPT;

            if (value.Equals((2049).ToString()))
                return LCID.ARABIC_IRAQ;

            if (value.Equals((11265).ToString()))
                return LCID.ARABIC_JORDAN;

            if (value.Equals((13313).ToString()))
                return LCID.ARABIC_KUWAIT;

            if (value.Equals((12289).ToString()))
                return LCID.ARABIC_LEBANON;

            if (value.Equals((4097).ToString()))
                return LCID.ARABIC_LIBYA;

            if (value.Equals((6145).ToString()))
                return LCID.ARABIC_MOROCCO;

            if (value.Equals((8193).ToString()))
                return LCID.ARABIC_OMAN;

            if (value.Equals((16385).ToString()))
                return LCID.ARABIC_QATAR;

            if (value.Equals((1025).ToString()))
                return LCID.ARABIC_SAUDI_ARABIA;

            if (value.Equals((10241).ToString()))
                return LCID.ARABIC_SYRIA;

            if (value.Equals((7169).ToString()))
                return LCID.ARABIC_TUNISIA;

            if (value.Equals((14337).ToString()))
                return LCID.ARABIC_UAE;

            if (value.Equals((9217).ToString()))
                return LCID.ARABIC_YEMEN;

            if (value.Equals((1067).ToString()))
                return LCID.ARABIC_ARMENIAN;

            if (value.Equals((2092).ToString()))
                return LCID.AZERI_CYRILIC;

            if (value.Equals((1068).ToString()))
                return LCID.AZERI_LATIN;

            if (value.Equals((1069).ToString()))
                return LCID.BASQUE;

            if (value.Equals((1059).ToString()))
                return LCID.BELARUSIAN;

            if (value.Equals((1026).ToString()))
                return LCID.BULGARIAN;

            if (value.Equals((1109).ToString()))
                return LCID.BURMESE;

            if (value.Equals((1027).ToString()))
                return LCID.CATALAN;

            if (value.Equals((3076).ToString()))
                return LCID.CHINESE_HONGKONG_SAR;

            if (value.Equals((5124).ToString()))
                return LCID.CHINESE_MACAO_SAR;

            if (value.Equals((2052).ToString()))
                return LCID.CHINESE;

            if (value.Equals((4100).ToString()))
                return LCID.CHINESE_SINGAPORE;

            if (value.Equals((1028).ToString()))
                return LCID.CHINESE_TAIWAN;

            if (value.Equals((1050).ToString()))
                return LCID.CROATIAN;

            if (value.Equals((1029).ToString()))
                return LCID.CZECH;

            if (value.Equals((1030).ToString()))
                return LCID.DANISH;

            if (value.Equals((1125).ToString()))
                return LCID.DIVEHI;

            if (value.Equals((2067).ToString()))
                return LCID.DUTCH_BELGIUM;

            if (value.Equals((1043).ToString()))
                return LCID.DUTCH_NETHERLANDS;

            if (value.Equals((3081).ToString()))
                return LCID.ENGLISH_AUSTRALIA;

            if (value.Equals((10249).ToString()))
                return LCID.ENGLISH_BELIZE;

            if (value.Equals((4105).ToString()))
                return LCID.ENGLISH_CANADA;

            if (value.Equals((9225).ToString()))
                return LCID.ENGLISH_CARRIBEAN;

            if (value.Equals((6153).ToString()))
                return LCID.ENGLISH_IRELAND;

            if (value.Equals((8201).ToString()))
                return LCID.ENGLISH_JAMAICA;

            if (value.Equals((5129).ToString()))
                return LCID.ENGLISH_NEW_ZEALAND;

            if (value.Equals((13321).ToString()))
                return LCID.ENGLISH_PHILIPPINES;

            if (value.Equals((7177).ToString()))
                return LCID.ENGLISH_SOUTH_AFRICA;

            if (value.Equals((11273).ToString()))
                return LCID.ENGLISH_TRINIDAD;

            if (value.Equals((2057).ToString()))
                return LCID.ENGLISH_UK;

            if (value.Equals((1033).ToString()))
                return LCID.ENGLISH_US;

            if (value.Equals((12297).ToString()))
                return LCID.ENGLISH_ZIMBABWE;

            if (value.Equals((1061).ToString()))
                return LCID.ESTONIAN;

            if (value.Equals((1080).ToString()))
                return LCID.FAEROESE;

            if (value.Equals((1065).ToString()))
                return LCID.FARSI;

            if (value.Equals((1035).ToString()))
                return LCID.FINNISH;

            if (value.Equals((2060).ToString()))
                return LCID.FRENCH_BELGIUM;

            if (value.Equals((3084).ToString()))
                return LCID.FRENCH_CANADA;

            if (value.Equals((1036).ToString()))
                return LCID.FRENCH_FRANCE;

            if (value.Equals((5132).ToString()))
                return LCID.FRENCH_LUXEMBOURG;

            if (value.Equals((6156).ToString()))
                return LCID.FRENCH_MONACO;

            if (value.Equals((4108).ToString()))
                return LCID.FRENCH_SWITZERLAND;

            if (value.Equals((1071).ToString()))
                return LCID.FYRO_MACEDONIAN;

            if (value.Equals((1110).ToString()))
                return LCID.GALICIAN;

            if (value.Equals((1079).ToString()))
                return LCID.GEORGIAN;

            if (value.Equals((3079).ToString()))
                return LCID.GERMAN_AUSTRIA;

            if (value.Equals((1031).ToString()))
                return LCID.GERMAN_GERMANY;

            if (value.Equals((5127).ToString()))
                return LCID.GERMAN_LIECHTENSTEIN;

            if (value.Equals((4103).ToString()))
                return LCID.GERMAN_LUXEMBOURG;

            if (value.Equals((2055).ToString()))
                return LCID.GERMAN_SWITZERLAND;

            if (value.Equals((1032).ToString()))
                return LCID.GREEK;

            if (value.Equals((1095).ToString()))
                return LCID.GUJARATI;

            if (value.Equals((1037).ToString()))
                return LCID.HEBREW;

            if (value.Equals((1081).ToString()))
                return LCID.HINDI_INDIA;

            if (value.Equals((1038).ToString()))
                return LCID.HUNGARIAN;

            if (value.Equals((1039).ToString()))
                return LCID.ICELANDIC;

            if (value.Equals((1057).ToString()))
                return LCID.INDONESIAN;

            if (value.Equals((1040).ToString()))
                return LCID.ITALIAN_ITALY;

            if (value.Equals((2064).ToString()))
                return LCID.ITALIAN_SWITZERLAND;

            if (value.Equals((1041).ToString()))
                return LCID.JAPANESE;

            if (value.Equals((1099).ToString()))
                return LCID.KANNADA;

            if (value.Equals((1087).ToString()))
                return LCID.KAZAKH;

            if (value.Equals((1107).ToString()))
                return LCID.KHMER;

            if (value.Equals((1111).ToString()))
                return LCID.KONKANI;

            if (value.Equals((1042).ToString()))
                return LCID.KOREAN;

            if (value.Equals((1088).ToString()))
                return LCID.KYRGYZ_CYRILICK;

            if (value.Equals((1062).ToString()))
                return LCID.LATVIAN;

            if (value.Equals((1063).ToString()))
                return LCID.LITHUANIAN;

            if (value.Equals((1086).ToString()))
                return LCID.MALAY_MALAYSIA;

            if (value.Equals((2110).ToString()))
                return LCID.MALAY_BRUNEI_DARUSSALAM;

            if (value.Equals((1082).ToString()))
                return LCID.MALTESE;

            if (value.Equals((1102).ToString()))
                return LCID.MARATHI;

            if (value.Equals((1104).ToString()))
                return LCID.MONGOLIAN_CYRILIC;

            if (value.Equals((1044).ToString()))
                return LCID.NORWEGIAN_BOKMAL;

            if (value.Equals((2068).ToString()))
                return LCID.NORWEGIAN_NYORSK;

            if (value.Equals((1045).ToString()))
                return LCID.POLISH;

            if (value.Equals((1046).ToString()))
                return LCID.PORTUGUESE_BRAZIL;

            if (value.Equals((2070).ToString()))
                return LCID.PORTUGUESE_PORTUGAL;

            if (value.Equals((1094).ToString()))
                return LCID.PUNJABI;

            if (value.Equals((1047).ToString()))
                return LCID.RHAETO_ROMANIC;

            if (value.Equals((1048).ToString()))
                return LCID.ROMANIAN;

            if (value.Equals((1049).ToString()))
                return LCID.RUSSIAN;

            if (value.Equals((1103).ToString()))
                return LCID.SANSKRIT;

            if (value.Equals((3098).ToString()))
                return LCID.SERBIAN_CYRILIC;

            if (value.Equals((2074).ToString()))
                return LCID.SERBIAN_LATIN;

            if (value.Equals((1115).ToString()))
                return LCID.SINHALA;

            if (value.Equals((1051).ToString()))
                return LCID.SLOVAK;

            if (value.Equals((1060).ToString()))
                return LCID.SLOVENIAN;

            if (value.Equals((11274).ToString()))
                return LCID.SPANISH_ARGENTINA;

            if (value.Equals((16394).ToString()))
                return LCID.SPANISH_BOLIVIA;

            if (value.Equals((13322).ToString()))
                return LCID.SPANISH_CHILE;

            if (value.Equals((9226).ToString()))
                return LCID.SPANICH_COLOMBIA;

            if (value.Equals((5130).ToString()))
                return LCID.SPANISH_COSTA_RICA;

            if (value.Equals((7178).ToString()))
                return LCID.SPANISH_DOMINICAN_REPUBLIC;

            if (value.Equals((12298).ToString()))
                return LCID.SPANISH_ECUADOR;

            if (value.Equals((17418).ToString()))
                return LCID.SPANISH_EL_SALVADOR;

            if (value.Equals((4106).ToString()))
                return LCID.SPANISH_GUATEMALA;

            if (value.Equals((18442).ToString()))
                return LCID.SPANISH_HONDURAS;

            if (value.Equals((2058).ToString()))
                return LCID.SPANISH_MEXICO;

            if (value.Equals((19466).ToString()))
                return LCID.SPANISH_NICARAGUA;

            if (value.Equals((6154).ToString()))
                return LCID.SPANISH_PANAMA;

            if (value.Equals((15370).ToString()))
                return LCID.SPANISH_PARAGUAY;

            if (value.Equals((10250).ToString()))
                return LCID.SPANISH_PERU;

            if (value.Equals((20490).ToString()))
                return LCID.SPANISH_PUERTO_RICO;

            if (value.Equals((1034).ToString()))
                return LCID.SPANISH_TRADITIONAL_SORT;

            if (value.Equals((3082).ToString()))
                return LCID.SPANISH_INTERNATIONAL_SORT;

            if (value.Equals((14346).ToString()))
                return LCID.SPANISH_URUGUAY;

            if (value.Equals((8202).ToString()))
                return LCID.SPANISH_VENEZUELA;

            if (value.Equals((1089).ToString()))
                return LCID.SWAHILI;

            if (value.Equals((1053).ToString()))
                return LCID.SWEDISH;

            if (value.Equals((2077).ToString()))
                return LCID.SWEDISH_FINLAND;

            if (value.Equals((1114).ToString()))
                return LCID.SYRIAC;

            if (value.Equals((1097).ToString()))
                return LCID.TAMIL;

            if (value.Equals((1092).ToString()))
                return LCID.TATAR;

            if (value.Equals((1098).ToString()))
                return LCID.TELUGU;

            if (value.Equals((1054).ToString()))
                return LCID.THAI_THAILAND;

            if (value.Equals((1055).ToString()))
                return LCID.TURKISH;

            if (value.Equals((1064).ToString()))
                return LCID.TAJIK_CYRILLIC;

            if (value.Equals((1090).ToString()))
                return LCID.TURKMEN;

            if (value.Equals((1058).ToString()))
                return LCID.UKRAINIAN;

            if (value.Equals((1056).ToString()))
                return LCID.URDU;

            if (value.Equals((2115).ToString()))
                return LCID.UZBEK_CYRILIC;

            if (value.Equals((1091).ToString()))
                return LCID.UZBEK_LATIN;

            if (value.Equals((1066).ToString()))
                return LCID.VIETNAMESE;

            if (value.Equals((50001).ToString()))
                return LCID.CTC_SIMPLIFIED;

            if (value.Equals((50002).ToString()))
                return LCID.CTC_TRADITIONAL;

            if (value.Equals((2117).ToString()))
                return LCID.BENGALI_BANGLADESH;

            if (value.Equals((1093).ToString()))
                return LCID.BENGALI_INDIA;

            if (value.Equals((1101).ToString()))
                return LCID.ASSAMESE;

            if (value.Equals((1096).ToString()))
                return LCID.ORIYA;

            if (value.Equals((1100).ToString()))
                return LCID.MALAYALAM;

            if (value.Equals((1108).ToString()))
                return LCID.LAO;

            if (value.Equals((1113).ToString()))
                return LCID.SINDHI_INDIA;

            if (value.Equals((1118).ToString()))
                return LCID.AMHARIC;

            if (value.Equals((1120).ToString()))
                return LCID.KASHMIRI;

            if (value.Equals((1121).ToString()))
                return LCID.NEPALI;

            if (value.Equals((1123).ToString()))
                return LCID.PASHTO;

            if (value.Equals((2137).ToString()))
                return LCID.SINDHI;

            if (value.Equals((4096).ToString()))
                return LCID.ARABIC;

            if (value.Equals((10000).ToString()))
                return LCID.BANK_CARD_NUMBER;

            if (value.Equals((10001).ToString()))
                return LCID.BANK_CARD_EXPIRY_DATE;

            if (value.Equals((10002).ToString()))
                return LCID.BANK_CARD_NAME;

            if (value.Equals((10003).ToString()))
                return LCID.BANK_CARD;

            if (value.Equals((10004).ToString()))
                return LCID.BANK_CARD_CVV2;

            if (value.Equals((10011).ToString()))
                return LCID.ABKHAZIAN;

            if (value.Equals((10012).ToString()))
                return LCID.KARAKALPAK;

            if (value.Equals((10560).ToString()))
                return LCID.URDU_DETECTION;

            throw new NotImplementedException($"Could not convert value to type LCID: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="LCID"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static LCID? FromStringOrDefault(string value)
        {
            if (value.Equals((0).ToString()))
                return LCID.LATIN;

            if (value.Equals((1078).ToString()))
                return LCID.AFRIKAANS;

            if (value.Equals((1052).ToString()))
                return LCID.ALBANIAN;

            if (value.Equals((5121).ToString()))
                return LCID.ARABIC_ALGERIA;

            if (value.Equals((15361).ToString()))
                return LCID.ARABIC_BAHRAIN;

            if (value.Equals((3073).ToString()))
                return LCID.ARABIC_EGYPT;

            if (value.Equals((2049).ToString()))
                return LCID.ARABIC_IRAQ;

            if (value.Equals((11265).ToString()))
                return LCID.ARABIC_JORDAN;

            if (value.Equals((13313).ToString()))
                return LCID.ARABIC_KUWAIT;

            if (value.Equals((12289).ToString()))
                return LCID.ARABIC_LEBANON;

            if (value.Equals((4097).ToString()))
                return LCID.ARABIC_LIBYA;

            if (value.Equals((6145).ToString()))
                return LCID.ARABIC_MOROCCO;

            if (value.Equals((8193).ToString()))
                return LCID.ARABIC_OMAN;

            if (value.Equals((16385).ToString()))
                return LCID.ARABIC_QATAR;

            if (value.Equals((1025).ToString()))
                return LCID.ARABIC_SAUDI_ARABIA;

            if (value.Equals((10241).ToString()))
                return LCID.ARABIC_SYRIA;

            if (value.Equals((7169).ToString()))
                return LCID.ARABIC_TUNISIA;

            if (value.Equals((14337).ToString()))
                return LCID.ARABIC_UAE;

            if (value.Equals((9217).ToString()))
                return LCID.ARABIC_YEMEN;

            if (value.Equals((1067).ToString()))
                return LCID.ARABIC_ARMENIAN;

            if (value.Equals((2092).ToString()))
                return LCID.AZERI_CYRILIC;

            if (value.Equals((1068).ToString()))
                return LCID.AZERI_LATIN;

            if (value.Equals((1069).ToString()))
                return LCID.BASQUE;

            if (value.Equals((1059).ToString()))
                return LCID.BELARUSIAN;

            if (value.Equals((1026).ToString()))
                return LCID.BULGARIAN;

            if (value.Equals((1109).ToString()))
                return LCID.BURMESE;

            if (value.Equals((1027).ToString()))
                return LCID.CATALAN;

            if (value.Equals((3076).ToString()))
                return LCID.CHINESE_HONGKONG_SAR;

            if (value.Equals((5124).ToString()))
                return LCID.CHINESE_MACAO_SAR;

            if (value.Equals((2052).ToString()))
                return LCID.CHINESE;

            if (value.Equals((4100).ToString()))
                return LCID.CHINESE_SINGAPORE;

            if (value.Equals((1028).ToString()))
                return LCID.CHINESE_TAIWAN;

            if (value.Equals((1050).ToString()))
                return LCID.CROATIAN;

            if (value.Equals((1029).ToString()))
                return LCID.CZECH;

            if (value.Equals((1030).ToString()))
                return LCID.DANISH;

            if (value.Equals((1125).ToString()))
                return LCID.DIVEHI;

            if (value.Equals((2067).ToString()))
                return LCID.DUTCH_BELGIUM;

            if (value.Equals((1043).ToString()))
                return LCID.DUTCH_NETHERLANDS;

            if (value.Equals((3081).ToString()))
                return LCID.ENGLISH_AUSTRALIA;

            if (value.Equals((10249).ToString()))
                return LCID.ENGLISH_BELIZE;

            if (value.Equals((4105).ToString()))
                return LCID.ENGLISH_CANADA;

            if (value.Equals((9225).ToString()))
                return LCID.ENGLISH_CARRIBEAN;

            if (value.Equals((6153).ToString()))
                return LCID.ENGLISH_IRELAND;

            if (value.Equals((8201).ToString()))
                return LCID.ENGLISH_JAMAICA;

            if (value.Equals((5129).ToString()))
                return LCID.ENGLISH_NEW_ZEALAND;

            if (value.Equals((13321).ToString()))
                return LCID.ENGLISH_PHILIPPINES;

            if (value.Equals((7177).ToString()))
                return LCID.ENGLISH_SOUTH_AFRICA;

            if (value.Equals((11273).ToString()))
                return LCID.ENGLISH_TRINIDAD;

            if (value.Equals((2057).ToString()))
                return LCID.ENGLISH_UK;

            if (value.Equals((1033).ToString()))
                return LCID.ENGLISH_US;

            if (value.Equals((12297).ToString()))
                return LCID.ENGLISH_ZIMBABWE;

            if (value.Equals((1061).ToString()))
                return LCID.ESTONIAN;

            if (value.Equals((1080).ToString()))
                return LCID.FAEROESE;

            if (value.Equals((1065).ToString()))
                return LCID.FARSI;

            if (value.Equals((1035).ToString()))
                return LCID.FINNISH;

            if (value.Equals((2060).ToString()))
                return LCID.FRENCH_BELGIUM;

            if (value.Equals((3084).ToString()))
                return LCID.FRENCH_CANADA;

            if (value.Equals((1036).ToString()))
                return LCID.FRENCH_FRANCE;

            if (value.Equals((5132).ToString()))
                return LCID.FRENCH_LUXEMBOURG;

            if (value.Equals((6156).ToString()))
                return LCID.FRENCH_MONACO;

            if (value.Equals((4108).ToString()))
                return LCID.FRENCH_SWITZERLAND;

            if (value.Equals((1071).ToString()))
                return LCID.FYRO_MACEDONIAN;

            if (value.Equals((1110).ToString()))
                return LCID.GALICIAN;

            if (value.Equals((1079).ToString()))
                return LCID.GEORGIAN;

            if (value.Equals((3079).ToString()))
                return LCID.GERMAN_AUSTRIA;

            if (value.Equals((1031).ToString()))
                return LCID.GERMAN_GERMANY;

            if (value.Equals((5127).ToString()))
                return LCID.GERMAN_LIECHTENSTEIN;

            if (value.Equals((4103).ToString()))
                return LCID.GERMAN_LUXEMBOURG;

            if (value.Equals((2055).ToString()))
                return LCID.GERMAN_SWITZERLAND;

            if (value.Equals((1032).ToString()))
                return LCID.GREEK;

            if (value.Equals((1095).ToString()))
                return LCID.GUJARATI;

            if (value.Equals((1037).ToString()))
                return LCID.HEBREW;

            if (value.Equals((1081).ToString()))
                return LCID.HINDI_INDIA;

            if (value.Equals((1038).ToString()))
                return LCID.HUNGARIAN;

            if (value.Equals((1039).ToString()))
                return LCID.ICELANDIC;

            if (value.Equals((1057).ToString()))
                return LCID.INDONESIAN;

            if (value.Equals((1040).ToString()))
                return LCID.ITALIAN_ITALY;

            if (value.Equals((2064).ToString()))
                return LCID.ITALIAN_SWITZERLAND;

            if (value.Equals((1041).ToString()))
                return LCID.JAPANESE;

            if (value.Equals((1099).ToString()))
                return LCID.KANNADA;

            if (value.Equals((1087).ToString()))
                return LCID.KAZAKH;

            if (value.Equals((1107).ToString()))
                return LCID.KHMER;

            if (value.Equals((1111).ToString()))
                return LCID.KONKANI;

            if (value.Equals((1042).ToString()))
                return LCID.KOREAN;

            if (value.Equals((1088).ToString()))
                return LCID.KYRGYZ_CYRILICK;

            if (value.Equals((1062).ToString()))
                return LCID.LATVIAN;

            if (value.Equals((1063).ToString()))
                return LCID.LITHUANIAN;

            if (value.Equals((1086).ToString()))
                return LCID.MALAY_MALAYSIA;

            if (value.Equals((2110).ToString()))
                return LCID.MALAY_BRUNEI_DARUSSALAM;

            if (value.Equals((1082).ToString()))
                return LCID.MALTESE;

            if (value.Equals((1102).ToString()))
                return LCID.MARATHI;

            if (value.Equals((1104).ToString()))
                return LCID.MONGOLIAN_CYRILIC;

            if (value.Equals((1044).ToString()))
                return LCID.NORWEGIAN_BOKMAL;

            if (value.Equals((2068).ToString()))
                return LCID.NORWEGIAN_NYORSK;

            if (value.Equals((1045).ToString()))
                return LCID.POLISH;

            if (value.Equals((1046).ToString()))
                return LCID.PORTUGUESE_BRAZIL;

            if (value.Equals((2070).ToString()))
                return LCID.PORTUGUESE_PORTUGAL;

            if (value.Equals((1094).ToString()))
                return LCID.PUNJABI;

            if (value.Equals((1047).ToString()))
                return LCID.RHAETO_ROMANIC;

            if (value.Equals((1048).ToString()))
                return LCID.ROMANIAN;

            if (value.Equals((1049).ToString()))
                return LCID.RUSSIAN;

            if (value.Equals((1103).ToString()))
                return LCID.SANSKRIT;

            if (value.Equals((3098).ToString()))
                return LCID.SERBIAN_CYRILIC;

            if (value.Equals((2074).ToString()))
                return LCID.SERBIAN_LATIN;

            if (value.Equals((1115).ToString()))
                return LCID.SINHALA;

            if (value.Equals((1051).ToString()))
                return LCID.SLOVAK;

            if (value.Equals((1060).ToString()))
                return LCID.SLOVENIAN;

            if (value.Equals((11274).ToString()))
                return LCID.SPANISH_ARGENTINA;

            if (value.Equals((16394).ToString()))
                return LCID.SPANISH_BOLIVIA;

            if (value.Equals((13322).ToString()))
                return LCID.SPANISH_CHILE;

            if (value.Equals((9226).ToString()))
                return LCID.SPANICH_COLOMBIA;

            if (value.Equals((5130).ToString()))
                return LCID.SPANISH_COSTA_RICA;

            if (value.Equals((7178).ToString()))
                return LCID.SPANISH_DOMINICAN_REPUBLIC;

            if (value.Equals((12298).ToString()))
                return LCID.SPANISH_ECUADOR;

            if (value.Equals((17418).ToString()))
                return LCID.SPANISH_EL_SALVADOR;

            if (value.Equals((4106).ToString()))
                return LCID.SPANISH_GUATEMALA;

            if (value.Equals((18442).ToString()))
                return LCID.SPANISH_HONDURAS;

            if (value.Equals((2058).ToString()))
                return LCID.SPANISH_MEXICO;

            if (value.Equals((19466).ToString()))
                return LCID.SPANISH_NICARAGUA;

            if (value.Equals((6154).ToString()))
                return LCID.SPANISH_PANAMA;

            if (value.Equals((15370).ToString()))
                return LCID.SPANISH_PARAGUAY;

            if (value.Equals((10250).ToString()))
                return LCID.SPANISH_PERU;

            if (value.Equals((20490).ToString()))
                return LCID.SPANISH_PUERTO_RICO;

            if (value.Equals((1034).ToString()))
                return LCID.SPANISH_TRADITIONAL_SORT;

            if (value.Equals((3082).ToString()))
                return LCID.SPANISH_INTERNATIONAL_SORT;

            if (value.Equals((14346).ToString()))
                return LCID.SPANISH_URUGUAY;

            if (value.Equals((8202).ToString()))
                return LCID.SPANISH_VENEZUELA;

            if (value.Equals((1089).ToString()))
                return LCID.SWAHILI;

            if (value.Equals((1053).ToString()))
                return LCID.SWEDISH;

            if (value.Equals((2077).ToString()))
                return LCID.SWEDISH_FINLAND;

            if (value.Equals((1114).ToString()))
                return LCID.SYRIAC;

            if (value.Equals((1097).ToString()))
                return LCID.TAMIL;

            if (value.Equals((1092).ToString()))
                return LCID.TATAR;

            if (value.Equals((1098).ToString()))
                return LCID.TELUGU;

            if (value.Equals((1054).ToString()))
                return LCID.THAI_THAILAND;

            if (value.Equals((1055).ToString()))
                return LCID.TURKISH;

            if (value.Equals((1064).ToString()))
                return LCID.TAJIK_CYRILLIC;

            if (value.Equals((1090).ToString()))
                return LCID.TURKMEN;

            if (value.Equals((1058).ToString()))
                return LCID.UKRAINIAN;

            if (value.Equals((1056).ToString()))
                return LCID.URDU;

            if (value.Equals((2115).ToString()))
                return LCID.UZBEK_CYRILIC;

            if (value.Equals((1091).ToString()))
                return LCID.UZBEK_LATIN;

            if (value.Equals((1066).ToString()))
                return LCID.VIETNAMESE;

            if (value.Equals((50001).ToString()))
                return LCID.CTC_SIMPLIFIED;

            if (value.Equals((50002).ToString()))
                return LCID.CTC_TRADITIONAL;

            if (value.Equals((2117).ToString()))
                return LCID.BENGALI_BANGLADESH;

            if (value.Equals((1093).ToString()))
                return LCID.BENGALI_INDIA;

            if (value.Equals((1101).ToString()))
                return LCID.ASSAMESE;

            if (value.Equals((1096).ToString()))
                return LCID.ORIYA;

            if (value.Equals((1100).ToString()))
                return LCID.MALAYALAM;

            if (value.Equals((1108).ToString()))
                return LCID.LAO;

            if (value.Equals((1113).ToString()))
                return LCID.SINDHI_INDIA;

            if (value.Equals((1118).ToString()))
                return LCID.AMHARIC;

            if (value.Equals((1120).ToString()))
                return LCID.KASHMIRI;

            if (value.Equals((1121).ToString()))
                return LCID.NEPALI;

            if (value.Equals((1123).ToString()))
                return LCID.PASHTO;

            if (value.Equals((2137).ToString()))
                return LCID.SINDHI;

            if (value.Equals((4096).ToString()))
                return LCID.ARABIC;

            if (value.Equals((10000).ToString()))
                return LCID.BANK_CARD_NUMBER;

            if (value.Equals((10001).ToString()))
                return LCID.BANK_CARD_EXPIRY_DATE;

            if (value.Equals((10002).ToString()))
                return LCID.BANK_CARD_NAME;

            if (value.Equals((10003).ToString()))
                return LCID.BANK_CARD;

            if (value.Equals((10004).ToString()))
                return LCID.BANK_CARD_CVV2;

            if (value.Equals((10011).ToString()))
                return LCID.ABKHAZIAN;

            if (value.Equals((10012).ToString()))
                return LCID.KARAKALPAK;

            if (value.Equals((10560).ToString()))
                return LCID.URDU_DETECTION;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="LCID"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static int ToJsonValue(LCID value)
        {
            return (int) value;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="LCID"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class LCIDJsonConverter : JsonConverter<LCID>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override LCID Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            LCID? result = rawValue == null
                ? null
                : LCIDValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the LCID to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="lCID"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, LCID lCID, JsonSerializerOptions options)
        {
            writer.WriteStringValue(lCID.ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="LCID"/>
    /// </summary>
    public class LCIDNullableJsonConverter : JsonConverter<LCID?>
    {
        /// <summary>
        /// Returns a LCID from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override LCID? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            LCID? result = rawValue == null
                ? null
                : LCIDValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the DateTime to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="lCID"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, LCID? lCID, JsonSerializerOptions options)
        {
            writer.WriteStringValue(lCID?.ToString() ?? "null");
        }
    }
}
