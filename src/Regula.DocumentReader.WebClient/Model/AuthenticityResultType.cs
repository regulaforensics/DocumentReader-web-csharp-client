// <auto-generated>
/*
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.4.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Regula.DocumentReader.WebClient.Client;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// Enumeration describes available authenticity checks: https://docs.regulaforensics.com/develop/doc-reader-sdk/web-service/development/enums/authenticity-result-type/.
    /// </summary>
    /// <value>Enumeration describes available authenticity checks: https://docs.regulaforensics.com/develop/doc-reader-sdk/web-service/development/enums/authenticity-result-type/.</value>
    public enum AuthenticityResultType
    {
        /// <summary>
        /// Enum NONE for value: 0
        /// </summary>
        NONE = 0,

        /// <summary>
        /// Enum UV_LUMINESCENCE for value: 1
        /// </summary>
        UV_LUMINESCENCE = 1,

        /// <summary>
        /// Enum IR_B900 for value: 2
        /// </summary>
        IR_B900 = 2,

        /// <summary>
        /// Enum IMAGE_PATTERN for value: 4
        /// </summary>
        IMAGE_PATTERN = 4,

        /// <summary>
        /// Enum AXIAL_PROTECTION for value: 8
        /// </summary>
        AXIAL_PROTECTION = 8,

        /// <summary>
        /// Enum UV_FIBERS for value: 16
        /// </summary>
        UV_FIBERS = 16,

        /// <summary>
        /// Enum IR_VISIBILITY for value: 32
        /// </summary>
        IR_VISIBILITY = 32,

        /// <summary>
        /// Enum OCR_SECURITY_TEXT for value: 64
        /// </summary>
        OCR_SECURITY_TEXT = 64,

        /// <summary>
        /// Enum IPI for value: 128
        /// </summary>
        IPI = 128,

        /// <summary>
        /// Enum IR_PHOTO for value: 256
        /// </summary>
        IR_PHOTO = 256,

        /// <summary>
        /// Enum PHOTO_EMBED_TYPE for value: 512
        /// </summary>
        PHOTO_EMBED_TYPE = 512,

        /// <summary>
        /// Enum OVI for value: 1024
        /// </summary>
        OVI = 1024,

        /// <summary>
        /// Enum IR_LUMINESCENCE for value: 2048
        /// </summary>
        IR_LUMINESCENCE = 2048,

        /// <summary>
        /// Enum HOLOGRAMS for value: 4096
        /// </summary>
        HOLOGRAMS = 4096,

        /// <summary>
        /// Enum PHOTO_AREA for value: 8192
        /// </summary>
        PHOTO_AREA = 8192,

        /// <summary>
        /// Enum UV_BACKGROUND for value: 16384
        /// </summary>
        UV_BACKGROUND = 16384,

        /// <summary>
        /// Enum PORTRAIT_COMPARISON for value: 32768
        /// </summary>
        PORTRAIT_COMPARISON = 32768,

        /// <summary>
        /// Enum BARCODE_FORMAT_CHECK for value: 65536
        /// </summary>
        BARCODE_FORMAT_CHECK = 65536,

        /// <summary>
        /// Enum KINEGRAM for value: 131072
        /// </summary>
        KINEGRAM = 131072,

        /// <summary>
        /// Enum LETTER_SCREEN for value: 262144
        /// </summary>
        LETTER_SCREEN = 262144,

        /// <summary>
        /// Enum HOLOGRAM_DETECTION for value: 524288
        /// </summary>
        HOLOGRAM_DETECTION = 524288,

        /// <summary>
        /// Enum FINGERPRINT_COMPARISON for value: 1048576
        /// </summary>
        FINGERPRINT_COMPARISON = 1048576,

        /// <summary>
        /// Enum LIVENESS for value: 2097152
        /// </summary>
        LIVENESS = 2097152,

        /// <summary>
        /// Enum EXTENDED_OCR_CHECK for value: 4194304
        /// </summary>
        EXTENDED_OCR_CHECK = 4194304,

        /// <summary>
        /// Enum EXTENDED_MRZ_CHECK for value: 8388608
        /// </summary>
        EXTENDED_MRZ_CHECK = 8388608,

        /// <summary>
        /// Enum ENCRYPTED_IPI for value: 16777216
        /// </summary>
        ENCRYPTED_IPI = 16777216,

        /// <summary>
        /// Enum STATUS_ONLY for value: 2147483648
        /// </summary>
        STATUS_ONLY = 2147483648
    }

    /// <summary>
    /// Converts <see cref="AuthenticityResultType"/> to and from the JSON value
    /// </summary>
    public static class AuthenticityResultTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="AuthenticityResultType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static AuthenticityResultType FromString(string value)
        {
            if (value.Equals((0).ToString()))
                return AuthenticityResultType.NONE;

            if (value.Equals((1).ToString()))
                return AuthenticityResultType.UV_LUMINESCENCE;

            if (value.Equals((2).ToString()))
                return AuthenticityResultType.IR_B900;

            if (value.Equals((4).ToString()))
                return AuthenticityResultType.IMAGE_PATTERN;

            if (value.Equals((8).ToString()))
                return AuthenticityResultType.AXIAL_PROTECTION;

            if (value.Equals((16).ToString()))
                return AuthenticityResultType.UV_FIBERS;

            if (value.Equals((32).ToString()))
                return AuthenticityResultType.IR_VISIBILITY;

            if (value.Equals((64).ToString()))
                return AuthenticityResultType.OCR_SECURITY_TEXT;

            if (value.Equals((128).ToString()))
                return AuthenticityResultType.IPI;

            if (value.Equals((256).ToString()))
                return AuthenticityResultType.IR_PHOTO;

            if (value.Equals((512).ToString()))
                return AuthenticityResultType.PHOTO_EMBED_TYPE;

            if (value.Equals((1024).ToString()))
                return AuthenticityResultType.OVI;

            if (value.Equals((2048).ToString()))
                return AuthenticityResultType.IR_LUMINESCENCE;

            if (value.Equals((4096).ToString()))
                return AuthenticityResultType.HOLOGRAMS;

            if (value.Equals((8192).ToString()))
                return AuthenticityResultType.PHOTO_AREA;

            if (value.Equals((16384).ToString()))
                return AuthenticityResultType.UV_BACKGROUND;

            if (value.Equals((32768).ToString()))
                return AuthenticityResultType.PORTRAIT_COMPARISON;

            if (value.Equals((65536).ToString()))
                return AuthenticityResultType.BARCODE_FORMAT_CHECK;

            if (value.Equals((131072).ToString()))
                return AuthenticityResultType.KINEGRAM;

            if (value.Equals((262144).ToString()))
                return AuthenticityResultType.LETTER_SCREEN;

            if (value.Equals((524288).ToString()))
                return AuthenticityResultType.HOLOGRAM_DETECTION;

            if (value.Equals((1048576).ToString()))
                return AuthenticityResultType.FINGERPRINT_COMPARISON;

            if (value.Equals((2097152).ToString()))
                return AuthenticityResultType.LIVENESS;

            if (value.Equals((4194304).ToString()))
                return AuthenticityResultType.EXTENDED_OCR_CHECK;

            if (value.Equals((8388608).ToString()))
                return AuthenticityResultType.EXTENDED_MRZ_CHECK;

            if (value.Equals((16777216).ToString()))
                return AuthenticityResultType.ENCRYPTED_IPI;

            if (value.Equals((2147483648).ToString()))
                return AuthenticityResultType.STATUS_ONLY;

            throw new NotImplementedException($"Could not convert value to type AuthenticityResultType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="AuthenticityResultType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static AuthenticityResultType? FromStringOrDefault(string value)
        {
            if (value.Equals((0).ToString()))
                return AuthenticityResultType.NONE;

            if (value.Equals((1).ToString()))
                return AuthenticityResultType.UV_LUMINESCENCE;

            if (value.Equals((2).ToString()))
                return AuthenticityResultType.IR_B900;

            if (value.Equals((4).ToString()))
                return AuthenticityResultType.IMAGE_PATTERN;

            if (value.Equals((8).ToString()))
                return AuthenticityResultType.AXIAL_PROTECTION;

            if (value.Equals((16).ToString()))
                return AuthenticityResultType.UV_FIBERS;

            if (value.Equals((32).ToString()))
                return AuthenticityResultType.IR_VISIBILITY;

            if (value.Equals((64).ToString()))
                return AuthenticityResultType.OCR_SECURITY_TEXT;

            if (value.Equals((128).ToString()))
                return AuthenticityResultType.IPI;

            if (value.Equals((256).ToString()))
                return AuthenticityResultType.IR_PHOTO;

            if (value.Equals((512).ToString()))
                return AuthenticityResultType.PHOTO_EMBED_TYPE;

            if (value.Equals((1024).ToString()))
                return AuthenticityResultType.OVI;

            if (value.Equals((2048).ToString()))
                return AuthenticityResultType.IR_LUMINESCENCE;

            if (value.Equals((4096).ToString()))
                return AuthenticityResultType.HOLOGRAMS;

            if (value.Equals((8192).ToString()))
                return AuthenticityResultType.PHOTO_AREA;

            if (value.Equals((16384).ToString()))
                return AuthenticityResultType.UV_BACKGROUND;

            if (value.Equals((32768).ToString()))
                return AuthenticityResultType.PORTRAIT_COMPARISON;

            if (value.Equals((65536).ToString()))
                return AuthenticityResultType.BARCODE_FORMAT_CHECK;

            if (value.Equals((131072).ToString()))
                return AuthenticityResultType.KINEGRAM;

            if (value.Equals((262144).ToString()))
                return AuthenticityResultType.LETTER_SCREEN;

            if (value.Equals((524288).ToString()))
                return AuthenticityResultType.HOLOGRAM_DETECTION;

            if (value.Equals((1048576).ToString()))
                return AuthenticityResultType.FINGERPRINT_COMPARISON;

            if (value.Equals((2097152).ToString()))
                return AuthenticityResultType.LIVENESS;

            if (value.Equals((4194304).ToString()))
                return AuthenticityResultType.EXTENDED_OCR_CHECK;

            if (value.Equals((8388608).ToString()))
                return AuthenticityResultType.EXTENDED_MRZ_CHECK;

            if (value.Equals((16777216).ToString()))
                return AuthenticityResultType.ENCRYPTED_IPI;

            if (value.Equals((2147483648).ToString()))
                return AuthenticityResultType.STATUS_ONLY;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="AuthenticityResultType"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static long ToJsonValue(AuthenticityResultType value)
        {
            return (long) value;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AuthenticityResultType"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class AuthenticityResultTypeJsonConverter : JsonConverter<AuthenticityResultType>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override AuthenticityResultType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            AuthenticityResultType? result = rawValue == null
                ? null
                : AuthenticityResultTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the AuthenticityResultType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="authenticityResultType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, AuthenticityResultType authenticityResultType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(authenticityResultType.ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AuthenticityResultType"/>
    /// </summary>
    public class AuthenticityResultTypeNullableJsonConverter : JsonConverter<AuthenticityResultType?>
    {
        /// <summary>
        /// Returns a AuthenticityResultType from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override AuthenticityResultType? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            AuthenticityResultType? result = rawValue == null
                ? null
                : AuthenticityResultTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the DateTime to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="authenticityResultType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, AuthenticityResultType? authenticityResultType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(authenticityResultType?.ToString() ?? "null");
        }
    }
}
