/*
 * Regula Document Reader Web API
 *
 * Documents recognition as easy as reading two bytes.   # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 7.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Regula.DocumentReader.WebClient.Client.FileParameter;
using OpenAPIDateConverter = Regula.DocumentReader.WebClient.Client.OpenAPIDateConverter;

namespace Regula.DocumentReader.WebClient.Model
{
    /// <summary>
    /// FaceApi
    /// </summary>
    [DataContract(Name = "FaceApi")]
    public partial class FaceApi : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FaceApi" /> class.
        /// </summary>
        /// <param name="url">The URL of the Regula Face Web service to be used..</param>
        /// <param name="mode">The processing mode: \&quot;match\&quot; or \&quot;match+search\&quot;..</param>
        /// <param name="search">search.</param>
        /// <param name="threshold">The similarity threshold, 0-100. Above 75 means that the faces&#39; similarity is verified, below 75 is not..</param>
        /// <param name="serviceTimeout">The Regula Face Web service requests timeout, ms..</param>
        /// <param name="proxy">Proxy to use, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXY.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;..</param>
        /// <param name="proxyUserpwd">Username and password to use for proxy authentication, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYUSERPWD.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;..</param>
        /// <param name="proxyType">Proxy protocol type, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYTYPE.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;..</param>
        /// <param name="childAgeThreshold">The age threshold for the portrait comparison. Default: 13..</param>
        /// <param name="childDocValidityYears">Estimated duration of validity for a child&#39;s passport, years. Default: 5..</param>
        public FaceApi(string url = default(string), string mode = default(string), FaceApiSearch search = default(FaceApiSearch), int threshold = default(int), int serviceTimeout = default(int), string proxy = default(string), string proxyUserpwd = default(string), int proxyType = default(int), int childAgeThreshold = default(int), int childDocValidityYears = default(int))
        {
            this.Url = url;
            this.Mode = mode;
            this.Search = search;
            this.Threshold = threshold;
            this.ServiceTimeout = serviceTimeout;
            this.Proxy = proxy;
            this.ProxyUserpwd = proxyUserpwd;
            this.ProxyType = proxyType;
            this.ChildAgeThreshold = childAgeThreshold;
            this.ChildDocValidityYears = childDocValidityYears;
        }

        /// <summary>
        /// The URL of the Regula Face Web service to be used.
        /// </summary>
        /// <value>The URL of the Regula Face Web service to be used.</value>
        /*
        <example>https://faceapi.regulaforensics.com</example>
        */
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string? Url { get; set; }

        /// <summary>
        /// The processing mode: \&quot;match\&quot; or \&quot;match+search\&quot;.
        /// </summary>
        /// <value>The processing mode: \&quot;match\&quot; or \&quot;match+search\&quot;.</value>
        /*
        <example>match</example>
        */
        [DataMember(Name = "mode", EmitDefaultValue = false)]
        public string? Mode { get; set; }

        /// <summary>
        /// Gets or Sets Search
        /// </summary>
        [DataMember(Name = "search", EmitDefaultValue = false)]
        public FaceApiSearch? Search { get; set; }

        /// <summary>
        /// The similarity threshold, 0-100. Above 75 means that the faces&#39; similarity is verified, below 75 is not.
        /// </summary>
        /// <value>The similarity threshold, 0-100. Above 75 means that the faces&#39; similarity is verified, below 75 is not.</value>
        /*
        <example>75</example>
        */
        [DataMember(Name = "threshold", EmitDefaultValue = false)]
        public int? Threshold { get; set; }

        /// <summary>
        /// The Regula Face Web service requests timeout, ms.
        /// </summary>
        /// <value>The Regula Face Web service requests timeout, ms.</value>
        /*
        <example>3000</example>
        */
        [DataMember(Name = "serviceTimeout", EmitDefaultValue = false)]
        public int? ServiceTimeout { get; set; }

        /// <summary>
        /// Proxy to use, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXY.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.
        /// </summary>
        /// <value>Proxy to use, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXY.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.</value>
        /*
        <example>http://localhost:8080</example>
        */
        [DataMember(Name = "proxy", EmitDefaultValue = false)]
        public string? Proxy { get; set; }

        /// <summary>
        /// Username and password to use for proxy authentication, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYUSERPWD.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.
        /// </summary>
        /// <value>Username and password to use for proxy authentication, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYUSERPWD.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.</value>
        /*
        <example>user:pass</example>
        */
        [DataMember(Name = "proxy_userpwd", EmitDefaultValue = false)]
        public string? ProxyUserpwd { get; set; }

        /// <summary>
        /// Proxy protocol type, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYTYPE.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.
        /// </summary>
        /// <value>Proxy protocol type, should be set according to the &lt;a href&#x3D;\&quot;https://curl.se/libcurl/c/CURLOPT_PROXYTYPE.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;cURL standard&lt;/a&gt;.</value>
        /*
        <example>0</example>
        */
        [DataMember(Name = "proxy_type", EmitDefaultValue = false)]
        public int? ProxyType { get; set; }

        /// <summary>
        /// The age threshold for the portrait comparison. Default: 13.
        /// </summary>
        /// <value>The age threshold for the portrait comparison. Default: 13.</value>
        /*
        <example>13</example>
        */
        [DataMember(Name = "childAgeThreshold", EmitDefaultValue = false)]
        public int? ChildAgeThreshold { get; set; }

        /// <summary>
        /// Estimated duration of validity for a child&#39;s passport, years. Default: 5.
        /// </summary>
        /// <value>Estimated duration of validity for a child&#39;s passport, years. Default: 5.</value>
        /*
        <example>5</example>
        */
        [DataMember(Name = "childDocValidityYears", EmitDefaultValue = false)]
        public int? ChildDocValidityYears { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FaceApi {\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Mode: ").Append(Mode).Append("\n");
            sb.Append("  Search: ").Append(Search).Append("\n");
            sb.Append("  Threshold: ").Append(Threshold).Append("\n");
            sb.Append("  ServiceTimeout: ").Append(ServiceTimeout).Append("\n");
            sb.Append("  Proxy: ").Append(Proxy).Append("\n");
            sb.Append("  ProxyUserpwd: ").Append(ProxyUserpwd).Append("\n");
            sb.Append("  ProxyType: ").Append(ProxyType).Append("\n");
            sb.Append("  ChildAgeThreshold: ").Append(ChildAgeThreshold).Append("\n");
            sb.Append("  ChildDocValidityYears: ").Append(ChildDocValidityYears).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
